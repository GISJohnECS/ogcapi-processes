openapi: 3.0.2
info:
  title: The OGC API - Processes
  version: "1.0-draft.3"
  description: |-
    WARNING - THIS IS WORK IN PROGRESS\
    TODO - Add a description of the sample service.\
    TODO - Add security elements in a separate example.\
    TODO - Connect to a live service.
  contact:
    name: Benjamin Pross
    email: b.pross@52north.org
  license:
    name: OGC license
    url: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/LICENSE'
paths:
  /:
    get:
      summary: landing page of this API
      description: >-
        The landing page provides links to the API definition, the Conformance
        statements and the metadata about the processes offered by this service.
      operationId: getLandingPage
      tags:
        - Capabilities
      responses:
        '200':
          description: links to the API capabilities
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/root.yaml'
            text/html:
              schema:
                type: string
  /conformance:
    get:
      summary: information about standards that this API conforms to
      description: >-
        list all requirements classes specified in a standard (e.g., WPS REST/JSON Binding Core) that the server conforms to
      operationId: getRequirementsClasses
      tags:
        - Conformance
      responses:
        '200':
          description: the URIs of all requirements classes supported by the server
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/req-classes.yaml'
  /processes:
    get:
      summary: retrieve available processes
      description: >-
        TODO
      operationId: getProcesses
      tags:
        - Processes
      responses:
        '200':
          description: >-
            Information about the available processes
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/processCollection.yaml'
  /processes/{id}:
    get:
      summary: retrieve a process description
      operationId: getProcessDescription
      tags:
        - ProcessDescription
      parameters:
          - in: path
            name: id
            description: The id of a process
            required: true
            schema:
              type: string
            example: buffer
      responses:
        '200':
          description: A process description.
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/process.yaml'
                example: 
                   process:
                     id: buffer
                     title: Buffer process 
                     description: Buffer process 
                     keywords: [process, buffer]
                     inputs: 
                        - id: features
                          title: features
                          description: The features to buffer
                          formats: 
                             - mimeType: application/json
                               maximumMegabytes: 3
                               default: true
                             - mimeType: application/x-zipped-shp
                               maximumMegabytes: 4 
                        - id: width
                          title: width
                          description: The width of the buffer
                          literalDataDomain:
                             dataType:
                                 name: double
                             valueDefinition:
                                 defaultValue: 1000
                             uom: meters
                     outputs:
                           - id: result
                             title: result
                             description: The buffered features
                             formats: 
                                - mimeType: application/json
                                  default: true
                                - mimeType: application/x-zipped-shp
                     version: 1.1
                     jobControlOptions: [sync-execute, async-execute]
                     outputTransmission: [value, reference]
                     links:
                        - rel: canonical
                          href: https://virtserver.swaggerhub.com/geoprocessing/WPS/0.01/processes/buffer/jobs
                          type: application/json
                          title: Execute endpoint
        '404':
          description: 'The process with id {id} does not exist.'
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml'
  /processes/{id}/jobs:
    get:
      summary: retrieve the list of jobs for a process.
      operationId: getJobList
      tags:
        - JobList
      parameters:
          - in: path
            name: id
            description: The id of a process.
            required: true
            schema:
              type: string
      responses:
        '200':
          description: A list of jobs for this process.
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/jobCollection.yaml'
        '404':
          description: 'The process with id {id} does not exist.'
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml'
    post:
      summary: execute a process.
      operationId: execute
      tags:
        - Execute
      parameters:
          - in: path
            name: id
            description: The id of a process.
            required: true
            schema:
              type: string
      requestBody:
        description: Mandatory execute request JSON
        required: true
        content:
          application/json:
            schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/execute.yaml'
      responses:
        '200':
          description: The result of a synchronous execution.
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/result.yaml'
        '201':
          description: Started asynchronous execution. Created job.
          headers:
            Location:
              schema:
                  type: string
              description: URL to check the status of the execution/job.
        '404':
          description: 'The process with id {id} does not exist.'
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml'
      callbacks:
          jobCompleted:
            '{$request.body#/subscriber}':
              post:
                requestBody:
                  content:
                    application/json:
                      schema:
                        $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/result.yaml'
                responses:
                  '202':
                    description: Results received successfully
  /processes/{id}/jobs/{jobID}:
    get:
      summary: retrieve the status of a job
      operationId: getStatus
      tags:
        - Status
      parameters:
          - in: path
            name: id
            description: The id of a process
            required: true
            schema:
              type: string
          - in: path
            name: jobID
            description: The id of a job
            required: true
            schema:
              type: string
      responses:
        '200':
          description: The status of a job.
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/statusInfo.yaml'
        '404':
          description: 'The process with id {id} or the job with id {jobID} does not exist.'
          content:
            application/json:
                schema:
                  $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml'
  /processes/{id}/jobs/{jobID}/results:
    get:
      summary: retrieve the result(s) of a job
      operationId: getResult
      tags:
        - Result
      parameters:
          - in: path
            name: id
            description: The id of a process
            required: true
            schema:
              type: string
          - in: path
            name: jobID
            description: The id of a job
            required: true
            schema:
              type: string
      responses:
        '200':
          description: The result of a job.
          content:
            application/json:
                schema:
                    $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/result.yaml'
        '404':
          description: 'The process with id {id} or the job with id {jobID} does not exist.'
          content:
            application/json:
                  schema:
                    $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml'
        '500':
          description: 'The job execution failed due to a internal server error.'
          content:
            application/json:
                  schema:
                    $ref: 'https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml'
tags:
  - name: Capabilities
    description: >-
      Essential characteristics of this API including information about the
      data.
  - name: Processes
    description: Access to processes.
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
   - description: SwaggerHub API Auto Mocking
     url: https://virtserver.swaggerhub.com/geoprocessing/WPS/0.01
   - description: 52°North demo server
     url: http://geoprocessing.demo.52north.org:8080/javaps/rest/